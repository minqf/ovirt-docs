<?xml version="1.0"?>
<section id="References_oVirt_3_Manage_Domains">
   <title>Domain Management Tool</title>
	<para>
		oVirt Engine uses directory services to authenticate users. While during installation the engine sets up a domain named <literal>internal</literal> this is only used for the <systemitem>admin</systemitem> user. To add and remove other users from the system it is first necessary to add the directory service(s) in which they are found.
	</para>
	<para>
		The supported directory services are Active Directory and <acronym>IPA</acronym>. oVirt Engine includes a domain management tool, <command>ovirt-manage-domains</command>, to add and remove domains provided by these services. In this way it is possible to grant access to the oVirt environment to users stored across multiple domains. This is true even where some users are stored in a domain managed by Active Directory and others are stored in a domain managed by <acronym>IPA</acronym>. 
	</para>
	<para>
		You will find the <command>ovirt-manage-domains</command> command on the machine to which oVirt Engine was installed. The <command>ovirt-manage-domains</command> command must be run as the <systemitem>root</systemitem> user. 
	</para>
	<section>	
		<title>Syntax</title>
		<para>
			The usage syntax is:
		</para>
<screen>
Usage:	<command>ovirt-manage-domains <parameter>-action</parameter>=<parameter><replaceable>ACTION</replaceable></parameter> <replaceable>[options]</replaceable></command>
</screen>
		<para>
			Available actions are:
		</para>
		<variablelist>
			<varlistentry>
				<term><parameter>add</parameter></term>
				<listitem>
					<para>
						Add a domain to the engine's directory services configuration.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>edit</parameter></term>
				<listitem>
					<para>
						Edit a domain in the engine's directory services configuration.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>delete</parameter></term>
				<listitem>
					<para>
						Delete a domain from the engine's directory services configuration.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>validate</parameter></term>
				<listitem>
					<para>
						Validate the engine's directory services configuration. The command attempts to authenticate to each domain in the configuration using the configured username and password.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>list</parameter></term>
				<listitem>
					<para>
						List the engine's current directory services configuration.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			The options available to be combined with the actions on the command line are:
		</para>
		<variablelist>
			<varlistentry>
				<term><parameter>-domain=<replaceable>DOMAIN</replaceable></parameter></term>
				<listitem>
					<para>
						Specifies the domain the action must be performed on. The <parameter>-domain</parameter> parameter is mandatory for <parameter>add</parameter>, <parameter>edit</parameter>, and <parameter>delete</parameter>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>-user=<replaceable>USER</replaceable></parameter></term>
				<listitem>
					<para>
						Specifies the domain user to use. The <parameter>-user</parameter> parameter is mandatory for <parameter>add</parameter>, and optional for <parameter>edit</parameter>.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>-interactive</parameter></term>
				<listitem>
					<para>
						Specifies that the domain user's password is to be provided interactively. This option, or the <parameter>-passwordFile</parameter> option, must be used to provide the password for use with the <parameter>add</parameter> action.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>-passwordFile=<replaceable>FILE</replaceable></parameter></term>
				<listitem>
					<para>
						Specifies that the domain user's password is on the first line of the provided file. This option, or the <parameter>-interactive</parameter> option, must be used to provide the password for use with the <parameter>add</parameter> action.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>-configFile=<replaceable>FILE</replaceable></parameter></term>
				<listitem>
					<para>
						Specifies an alternative configuration file that the command must load. The <parameter>-configFile</parameter> parameter is always optional.
					</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><parameter>-report</parameter></term>
				<listitem>
					<para>
						Specifies that when performing the <parameter>validate</parameter> action all validation errors encountered will be reported in full.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
		<para>
			Common usage examples are discussed further within this guide. For full usage information consult the <command>ovirt-manage-domains</command> command's help output:
			<screen># <command>ovirt-manage-domains --help</command></screen>
		</para>
	</section>
	<section>
		<title>Examples</title>
		<para>
			The following examples demonstrate the use of the <command>ovirt-manage-domains</command> to perform basic manipulation of the oVirt Engine domain configuration.
		</para>
		<example>
			<title>Adding Domains to Configuration</title>
			<para>
				This example runs the <command>ovirt-manage-domains</command> command to add the <literal>directory.demo.redhat.com</literal> domain to the oVirt Engine configuration. The configuration is set to use the <systemitem>admin</systemitem> user when querying the domain with the password to be provided interactively.
			</para>
<screen>
# ovirt-manage-domains -action=add -domain='directory.demo.redhat.com' -user='admin' -interactive
loaded template kr5.conf file
setting default_tkt_enctypes 
setting realms
setting domain realm
success
User guid is: 80b71bae-98a1-11e0-8f20-525400866c73
Successfully added domain directory.demo.redhat.com
</screen>
		</example>
		<example>
			<title>Edit Domain in Configuration</title>
			<para>
				This example runs the <command>ovirt-manage-domains</command> command to edit the <literal>directory.demo.redhat.com</literal> domain in the oVirt Engine configuration. The configuration is updated to use the <systemitem>admin</systemitem> user when querying this domain with the password to be provided interactively.
			</para>
<screen>
# ovirt-manage-domains -action=edit -domain=directory.demo.redhat.com -user=admin -interactive
loaded template kr5.conf file
setting default_tkt_enctypes 
setting realms
setting domain realmo
success
User guid is: 80b71bae-98a1-11e0-8f20-525400866c73
Successfully edited domain directory.demo.redhat.com
</screen>
		</example>
		<example>
			<title>Deleting Domains from Configuration</title>
			<para>
				This example runs the <command>ovirt-manage-domains</command> command to remove the <literal>directory.demo.redhat.com</literal> domain from the oVirt Engine configuration. Users defined in the removed domain will no longer be able to authenticate with oVirt Engine. The entries for the affected users will remain defined in oVirt Engine until they are explicitly removed.
			</para>
			<para>
				The domain being removed in this example is the last one listed in the oVirt Engine configuration. A warning is displayed highlighting this fact and that only the <systemitem>admin</systemitem> user from the <literal>internal</literal> domain will be able to log in until another domain is added.
			</para>
<screen>
# ovirt-manage-domains -action=delete -domain='directory.demo.redhat.com'
WARNING: Domain directory.demo.redhat.com is the last domain in the configuration. After deleting it you will have to either add another domain, or to use the internal admin user in order to login.
Successfully deleted domain directory.demo.redhat.com. Please remove all users and groups of this domain using the Administration portal or the API.
</screen>
		</example>
		<example>
			<title>Validating Configuration</title>
			<para>
				This example runs the <command>ovirt-manage-domains</command> command to validate the oVirt Engine configuration. The command attempts to log into each listed domain with the credentials provided in the configuration. If the attempt is successful then the domain is reported as valid.
			</para>
<screen>
# ovirt-manage-domains -action=validate
User guid is: 80b71bae-98a1-11e0-8f20-525400866c73
Domain directory.demo.redhat.com is valid.
</screen>
		</example>
		<example>
			<title>Listing Domains in Configuration</title>
			<para>
				This example runs the <command>ovirt-manage-domains</command> command to list the domains defined in the oVirt Engine configuration. For each configuration entry the command displays the domain, the username â€” in User Principle Name (<acronym>UPN</acronym>) format, and whether the domain is local or remote.
			</para>
<screen>
# ovirt-manage-domains -action=list
Domain: directory.demo.redhat.com
	User name: admin@DIRECTORY.DEMO.REDHAT.COM
	This domain is a remote domain.
</screen>
		</example>
	</section>
   <!-- Do not edit below this line! -->

   <!-- Injection Point: Related Overviews -->
   <!-- Injection Point: Related Concepts -->
   <!-- Injection Point: Related Tasks -->
</section>